
####################################

# USDZ Converter Script
# Version 1.0
# Scotty Wilson - scottyw@apple.com
# WORK IN PROGRESS!!!

####################################

import os
import glob
from os import walk

# Function to print header
def print_header():
	print('USDZ Converter Script')
	print('----------')
	print('')
	print('Version 1.0')
	print('Scotty Wilson - scottyw@apple.com')
	print('WORK IN PROGRESS!!!')
	print('----------')
	print('')

# Function to determine what assets are available
def determine_available_assets(files_in_directory):

	has_alembic = False
	has_obj = False
	has_gltf = False

	threedee_asset = ""

	# Determine what kind of 3D asset we're using
	for asset in files_in_directory:
		if ".abc" in asset and not has_alembic:
			has_alembic = True
			threedee = asset
		elif ".obj" in asset and not has_obj:
			has_obj = True
			threedee = asset
		elif ".gltf" in asset and not has_gltf:
			has_gltf = True
			threedee = asset

	# How may .pngs are there?
	png_count = len(glob.glob1(cwd, "*.png"))

	# Add .png files to list
	png_assets = []
	for file in glob.glob('*.png'):
		png_assets.append(file)

	print("Checking for available 3D assets:")
	print("----------")
	print("Alembic: " + str(has_alembic))
	print("OBJ: " + str(has_obj))
	print("GLTF: " + str(has_gltf))
	print("----------")

	determine_available_maps(png_assets)

# Function to check for maps
def determine_available_maps(png_assets):

	has_albedo = False
	has_roughness = False
	has_metallic = False
	has_normal = False
	has_ao = False
	has_emissive = False

	albedo_asset = ""
	roughness_asset = ""
	metallic_asset = ""
	normal_asset = ""
	ao_asset = ""
	emissive_asset = ""
 
	for asset in png_assets:
		if "_Albedo.png" in asset and not has_albedo:
			has_albedo = True
			albedo_asset = asset
		elif "_Roughness.png" in asset and not has_roughness:
			has_roughness = True
			roughness_asset = asset
		elif "_Metallic.png" in asset and not has_metallic:
			has_metallic = True
			metallic_asset = asset
		elif "_Normal.png" in asset and not has_normal:
			has_normal = True
			normal_asset = asset
		elif "_AO.png" in asset and not has_ao:
			has_ao = True
			ao_asset = asset
		elif "_Emissive.png" in asset and not has_emissive:
			has_emissive = True
			emissive_asset = asset


	print('')
	print("Checking for available texture maps:")
	print("----------")
	print("Albedo: " + str(has_albedo))
	print("Roughness: " + str(has_roughness))
	print("Metallic: " + str(has_metallic))
	print("Normal: " + str(has_normal))
	print("AO: " + str(has_ao))
	print("Emissive: " + str(has_emissive))
	print("----------")



# Get directory this script is located in.
cwd = os.getcwd()

# Get filename for assets to convert
files_in_directory = []
for (dirpath, dirnames, filenames) in walk(cwd):
    files_in_directory.extend(filenames)
    break

# XCode usdz_converter command
initial_command = 'xcrun usdz_converter'

print_header()
determine_available_assets(files_in_directory)
